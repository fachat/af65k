<!DOCTYPE webpage [ <!ENTITY eacute "&#233; "> <!ENTITY nbsp "&#160; "> ]>
<docpage name="65002 Opcode Structure">
  <!--author>
    <name>Andr&eacute; Fachat</name>
    <email>@EMAIL@</email>
    <homepage>@WEBROOT@</homepage>
    <yearstart>2011</yearstart>
    <yearend>2012</yearend>
  </author-->
  <style>optable.css</style>
  <keywords>8-bit,6502,65002</keywords>
  <metadesc>65002 documentation</metadesc>
  <overview>
	<p>
	This page describes the opcode structure for the 65k line of processors.
	</p>
  </overview>
  <toc/>
  <!--news>
    <item date="2012-04-12" state="hot">
        First release! Documented the first R0 version of the af65002 in its own <a href="65k/af65002/index.html">af65002 page</a>.
    </item>
     <item date="2012-01-01">
        Added a separate page for 6502-based <a href="hwinfo/usb/index.html">USB</a> solutions.
     </item>
  </news-->

  <section toc="opstruct" name="Opcode Structure">
    <desc><p>
	The original 6502 opcode structure always consists of a single byte opcode and an operand.
	For the 65k opcodes extension the opcodes left in the 256 byte opcode page do not provide
	enough space. Therefore the opcode structure is being extended with prefix bytes.
	</p>
	<table>
	<tr><th colspan="13">Bytes</th></tr>
	<tr><td width="5%">-4</td><td width="5%">-3</td><td width="5%">-2</td><td width="5%">-1</td><td width="5%">0</td><td width="5%">1</td><td width="5%">2</td><td width="5%">3</td><td width="5%">4</td><td width="5%">5</td><td width="5%">6</td><td width="5%">7</td><td width="5%">8</td></tr>
	<tr><th colspan="13">6502 opcodes</th></tr>
	<tr><td>-</td><td>-</td><td>-</td><td>-</td><td>Opcode</td><td colspan="8">-</td></tr>
	<tr><td>-</td><td>-</td><td>-</td><td>-</td><td>Opcode</td><td>relative/ immediate/ zeropage operand</td><td colspan="7">-</td></tr>
	<tr><td>-</td><td>-</td><td>-</td><td>-</td><td>Opcode</td><td colspan="2">address operand</td><td colspan="6">-</td></tr>
	<tr><th colspan="13">65002 opcodes</th></tr>
	<tr><td>-</td><td>(prefix1)</td><td>(prefix2)</td><td>(page)</td><td>Opcode</td><td colspan="8">-</td></tr>
	<tr><td>-</td><td>(prefix1)</td><td>(prefix2)</td><td>(page)</td><td>Opcode</td><td>byte relative/ immediate/ zeropage operand</td><td colspan="7">-</td></tr>
	<tr><td>-</td><td>(prefix1)</td><td>(prefix2)</td><td>(page)</td><td>Opcode</td><td colspan="2">word relative/ immediate/ address operand</td><td colspan="6">-</td></tr>
	<tr><td>-</td><td>(prefix1)</td><td>(prefix2)</td><td>(page)</td><td>Opcode</td><td colspan="4">long relative/ immediate/ address operand</td><td colspan="4">-</td></tr>
	<tr><td>-</td><td>(prefix1)</td><td>(prefix2)</td><td>(page)</td><td>Opcode</td><td colspan="8">quad relative/ immediate/ address operand</td></tr>
	<tr><th colspan="13">65010 opcodes</th></tr>
	<tr><td>(prefix1)</td><td>(prefix2)</td><td>(prefix3)</td><td>(page)</td><td>Opcode</td><td colspan="8">-</td></tr>
	<tr><td>(prefix1)</td><td>(prefix2)</td><td>(prefix3)</td><td>(page)</td><td>Opcode</td><td>byte relative/ immediate/ zeropage operand</td><td colspan="7">-</td></tr>
	<tr><td>(prefix1)</td><td>(prefix2)</td><td>(prefix3)</td><td>(page)</td><td>Opcode</td><td colspan="2">word relative/ immediate/ address operand</td><td colspan="6">-</td></tr>
	<tr><td>(prefix1)</td><td>(prefix2)</td><td>(prefix3)</td><td>(page)</td><td>Opcode</td><td colspan="4">long relative/ immediate/ address operand</td><td colspan="4">-</td></tr>
	<tr><td>(prefix1)</td><td>(prefix2)</td><td>(prefix3)</td><td>(page)</td><td>Opcode</td><td colspan="8">quad relative/ immediate/ address operand</td></tr>
	</table>
	<p>
	As you can see in this table, each opcode can have up to two (resp. three for the 65010) prefix bytes,
	plus an opcode page selector before the actual opcode. 
	Also the operands can now be byte, word, long and quad wide - 1, 2, 4 or 8 byte long.
	</p><p>
	All of the prefix bytes, as well as the page selector are optional. I.e. any of those must be
	within the original 6502 opcode table to be distinguishable from an original opcode.
	The following table shows the distribution of the prefix bytes in the 6502 opcode space:
	</p>
@OPCODES1@

<p>Legend:</p>
<table class="optable">
<tr><td>NMOS Opcodes</td><td class="cmos">CMOS Opcodes</td><td class="c65k">New 65k opcodes</td><td class="prefix">65k Prefix codes</td><td class="unused">Unused/Reserved</td></tr>
</table>

        <p>
        Some of the opcode fields are named prefix1 and prefix2, these are the modifiers to other opcodes as described above.
        Others are named like "QUICK prefix" or "EXT prefix". Those are page table selectors.
        These opcodes provide a way to extend the opcode list by having a second opcode byte follow the prefix. Thus there
        could be 256 additional "QUICK" opcodes, and 256 additional "EXT opcodes" and so on. These opcode planes are
        described below.
        </p><p>
	The prefix codes define a number of modifier bits. The prefix bits relevant for the opcode are 
	shown in the respective table cell for each opcode as well. The meaning of the prefix bits is given 
	below.
        </p><p>
        Note that there is still "plenty" of room for extensions. There are nine reserved prefix bytes - 4 of them could be used to
        implement further modification bits (like going 128 bits ...yuck!) or they could be used as further opcode planes. Some plans exist for the 65010.
        The one prefix at $6F should be reserved for extensions like floating point or vector processors or other extensions
        that do not "just" modify existing opcodes.
        </p><p>
	Note that the other features are explained in:
	</p>
	<ul>
	<li><a href="af65002prefixes.html">Prefixes page</a> describes the use of the prefix bits</li>
	<li><a href="af65002admodes.html">Addressing Modes page</a> describes the different addressing modes</li>
	<li><a href="af65002opcodes.html">Opcodes page</a> gives an overview on the opcodes</li>
	<li><a href="af65002hyper.html">Hypervisor mode page</a> describes the hypervisor mode and the use of the UM prefix</li>
	</ul>
   </desc>	
  </section>


    <disclaimer name="Disclaimer">
@DISCLAIMER@
    </disclaimer>
  <closing>
Last updated 2012-04-23.
  </closing>
</docpage>

